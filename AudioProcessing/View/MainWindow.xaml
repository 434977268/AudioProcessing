<Window x:Class="AudioProcessing.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ViewModel="clr-namespace:AudioProcessing.ViewModel"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="MainWindow"
        Width="800"
        Height="450"
        mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <DockPanel LastChildFill="True">
            <Button Command="{Binding OpenFolderCommand}"
                    Content="打开文件夹"
                    DockPanel.Dock="Top" />
            <Button Command="{Binding OpenFileCommand}"
                    Content="打开文件"
                    DockPanel.Dock="Top" />
            <Grid DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button Command="{Binding SelectAllCommand}"
                        CommandParameter="{Binding ElementName=AudioFilesListView}"
                        Content="全选" />
                <Button Grid.Column="1"
                        Command="{Binding SelectNothingCommand}"
                        CommandParameter="{Binding ElementName=AudioFilesListView}"
                        Content="全不选" />
            </Grid>

            <Button Command="{Binding ApplyToAllSelectedCommand}"
                    Content="应用到所有选中项"
                    DockPanel.Dock="Top" />
            <ListView x:Name="AudioFilesListView"
                      VerticalAlignment="Stretch"
                      DockPanel.Dock="Top"
                      ItemsSource="{Binding AudioFiles}"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      SelectedItem="{Binding SelectedAudioFile}"
                      SelectionMode="Extended">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ListViewSelectionChangedCommand}" CommandParameter="{Binding ElementName=AudioFilesListView, Path=SelectedItems}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="5,0,0,0" Text="{Binding FileName}" />
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </DockPanel>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DataGrid x:Name="AudioPropertiesDataGrid"
                      Grid.Row="0"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      ItemsSource="{Binding SelectedAudioFile.Properties}">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="28" CanUserResize="False">
                        <DataGridTemplateColumn.Header>
                            <CheckBox x:Name="ColumnCheckBox"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding DataContext.ColumnCheckBoxClickCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding ElementName=ColumnCheckBox}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="CheckBox"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          IsChecked="{Binding IsSelected, Mode=TwoWay}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <i:InvokeCommandAction Command="{Binding DataContext.CheckBoxClickCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding ElementName=CheckBox}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding PropertyName}"
                                        Header="属性名称"
                                        IsReadOnly="True" />
                    <DataGridTemplateColumn Header="属性值">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox x:Name="PropertyValueTextBox"
                                         IsReadOnly="{Binding IsReadOnly}"
                                         Text="{Binding PropertyValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding DataContext.TextChangedCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding ElementName=PropertyValueTextBox}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>

                                <!--  根据 IsReadOnly 设置只读状态  -->
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="其他属性">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox x:Name="OtherPropertiesComboBox"
                                          Width="200"
                                          ItemsSource="{Binding OtherProperties}"
                                          SelectedItem="{Binding SelectedOtherPropertyName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Selected">
                                            <i:InvokeCommandAction Command="{Binding DataContext.OtherPropertiesComboBoxSelectedCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding ElementName=AudioPropertiesDataGrid}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <TextBlock x:Name="progressTextBlock"
                       VerticalAlignment="Center"  
                       HorizontalAlignment="Center"
                       Grid.Row="1"
                       Panel.ZIndex="1"
                       Text="{Binding ProgressTextBlockValue}"
                       Visibility="{Binding ProgressTextBlockVisibility}" />

            <ProgressBar x:Name="ProgressBar"
                         Panel.ZIndex="0"
                         Grid.Row="1"
                         Height="20"
                         Maximum="100"
                         Minimum="0"
                         Value="{Binding ProgressValue}" />
        </Grid>


    </Grid>
</Window>